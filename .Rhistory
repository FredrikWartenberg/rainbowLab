source("plot.R")
plotPDF(pd)
source("plot.R")
plotPDF(pd)
str(pd)
windows()
plotInVsOut(pd)
?breaks
?cut
?split
?split
?split
x <- seq(0,100)
x
split(x,factor(10*seq(0,10))
)
hist(x,bins=10)
hi <- hist(x)
hi
hi <- hist(rnomr(100))
hi <- hist(rnom(100))
hi <- hist(rnorm(100))
hi
max(hi$density)
which(max(hi$density))
which(max(hi$density)==hi$density)
hi$mids[which(max(hi$density)==hi$density)]
source("experiments/singleRayWithDebug.R)
source("experiments/singleRayWithDebug.R")
source("experiments/singleRayWithDebug.R")
source("experiments/singleRayWithDebug.R")
source("experiments/arcLight.R")
source("experiments/arcLight.R")
pd
ed(pd)
source("experiments/generateAllData.R")
source("experiments/generateAllData.R")
fwrite(file="./experiments/allData.csv",pd)
str(pd)
?cut
pd$angD2bin <- cut(angD2DegCorr,breaks=90)
pd$angD2bin <- cut(pd$angD2DegCorr,breaks=90)
str(pd)
ed(pd)
pdHist <- pd[,.(.N,mean(angD2DegCorr),color),by=.(rainbowNo,lambda,angD2bin)]
ed(pdHist)
pdHist <- pd[,.(.N,ang=mean(angD2DegCorr),color),by=.(rainbowNo,lambda,angD2bin)]
ed(pdHist)
ggplot(data=pdHist[rainbowNo<3]) + geom_line(aes(x=ang,y=N,color=lambda)
)
ggplot(data=pdHist[as.numeric(rainbowNo<3)]) + geom_line(aes(x=ang,y=N,color=lambda))
ggplot(data=pdHist[as.numeric(rainbowNo)<3]) + geom_line(aes(x=ang,y=N,color=lambda))
ggplot(data=pdHist[as.numeric(rainbowNo)<3]) + geom_line(aes(x=ang,y=N,color=as.factor(lambda)))
pd$angD2bin <- cut(pd$angD2DegCorr,breaks=180)
pdHist <- pd[,.(.N,ang=mean(angD2DegCorr),color),by=.(rainbowNo,lambda,angD2bin)]
ggplot(data=pdHist[as.numeric(rainbowNo)<3]) + geom_line(aes(x=ang,y=N,color=as.factor(lambda)))
ggplot(data=pdHist[as.numeric(rainbowNo)<2]) + geom_line(aes(x=ang,y=N,color=as.factor(lambda)))
ggplot(data=pdHist[as.numeric(rainbowNo)==2]) + geom_line(aes(x=ang,y=N,color=as.factor(lambda)))
source("experiments/generateAllData.R")
fwrite(file="./experiments/longDataR1R2.csv",pd)
pd$angD2bin <- cut(pd$angD2DegCorr,breaks=180)
ggplot(data=pdHist[as.numeric(rainbowNo)<100] + geom_line(aes(x=ang,y=N,color=as.factor(lambda)))
pdHist <- pd[,.(.N,ang=mean(angD2DegCorr),color),by=.(rainbowNo,lambda,angD2bin)]
ggplot(data=pdHist[as.numeric(rainbowNo)<100]) + geom_line(aes(x=ang,y=N,color=as.factor(lambda)))
ggplot(data=pdHist[as.numeric(rainbowNo)<100]) + geom_point(aes(x=ang,y=N,color=as.factor(lambda)))
str(pdHist)
str(pd)
str(pdHist)
pdHist <- pd[,.(.N,ang=mean(angD2DegCorr)),by=.(rainbowNo,lambda,angD2bin)]
str(pdHist)
ggplot(data=pdHist[as.numeric(rainbowNo)<100]) + geom_point(aes(x=ang,y=N,color=as.factor(lambda)))
ggplot(data=pdHist[ang<60&ang>25]) + geom_point(aes(x=ang,y=N,color=as.factor(lambda)))
source("plot.R")
plotPDF
plotPDF(pd)
source("plot.R")
plotPDF(pd)
plotPDF(pd)
source("plot.R");plotPDF(pd)
source("plot.R");plotPDF(pd)
source("plot.R");plotPDF(pd)
source("plot.R");plotPDF(pd)
source("plot.R");plotPDF(pd)
source("plot.R");plotPDF(pd)
source("plot.R");plotPDF(pd)
source("plot.R");plotPDF(pd)
source("plot.R");plotPDF(pd)
source("plot.R");plotPDF(pd)
source("plot.R");plotPDF(pd)
source("plot.R");plotPDF(pd)
source("plot.R");plotPDF(pd)
source("plot.R");plotPDF(pd)
source("plot.R");plotPDF(pd)
source("plot.R");plotPDF(pd)
source("plot.R");plotPDF(pd)
hist(pd$angInDeg)
hist(pd[angInDeg > 88]$angInDeg)
str(pd)
source("experiments/generateAllData.R")
hist(pd[angInDeg > 88]$angInDeg)
warnings()
source("experiments/generateAllData.R")
hist(pd[angInDeg > 88]$angInDeg)
hist(pd$angInDeg)
nrow(pd)
source("experiments/generateAllData.R")
nrow(pd)
source("plot.R");plotPDF(pd)
source("experiments/generateAllData.R")
source("plot.R");plotPDF(pd)
hist(pd$angInDeg)
source("experiments/arcLight.R")
hist(pd$angInDeg)
source("experiments/arcLight.R")
traceback()
source("experiments/arcLight.R")
source("experiments/arcLight.R")
source("experiments/arcLight.R")
?open3d
 q()
source("experiments/arcLight.R")
?open3d
q()
?apply
source("experiments/arcLight.R")
?open3d
par3d()
source("experiments/arcLight.R")
par3d("skipRedraw"=FALSE)
demo(hist3d)
save <- par3d(skipRedraw=TRUE)
save
source("experiments/arcLight.R")
source("experiments/arcLight.R")
q()
source("experiments/arcLight.R")
source("experiments/arcLight.R")
?on.exit()
?on.exit()
?on.exit
render(drop)
render(drop())
source("experiments/arcLight.R")
render(drop())
render(drop(R=800))
source("experiments/arcLight.R")
save
source("experiments/arcLight.R")
source("experiments/arcLight.R")
par3d()
source("experiments/arcLight.R")
par3d()
po <- par3d()
po
pa <- par3d(skipRedraw=TRUE)
pa
?par3d
source("experiments/arcLight.R")
po <- par3d()
po <- par3d(skipRedraw=TRUE,no.readonly=TRUE)
po
demo(hist3d)
source("experiments/arcLight.R")
po
par3d()
pn <- par3d()
po
lllllll
pn
pn
par3d(po)
pnn <- par3d()
pnn
source("experiments/arcLight.R")
source("experiments/arcLight.R")
render(drop(R=800))
source("experiments/arcLight.R")
render(drop(R=800))
source("experiments/arcLight.R")
source("experiments/arcLight.R")
source("experiments/arcLight.R")
source("experiments/arcLight.R")
?arrow3d
source("experiments/arcLight.R")
source("experiments/arcLight.R")
source("experiments/arcLight.R")
source("experiments/arcLight.R")
source("experiments/arcLight.R")
source("experiments/arcLight.R")
source("experiments/arcLight.R")
source("experiments/arcLight.R")
source("experiments/arcLight.R")
source("experiments/arcLight.R")
source("experiments/arcLight.R")
source("experiments/arcLight.R")
source("experiments/arcLight.R")
?bg3d
source("experiments/arcLight.R")
source("experiments/arcLight.R")
source("experiments/arcLight.R")
?open3d
source("experiments/arcLight.R")
source("experiments/arcLight.R")
source("experiments/arcLight.R")
?lines3d
source("experiments/arcLight.R")
source("experiments/arcLight.R")
p1 <- c(1,2,3)
p2 <- c(-1,-2,-3)
rbind(p1,p2)
rbind(p1,p2)[1,]
rbind(p1,p2)[,1]
source("experiments/arcLight.R")
source("experiments/arcLight.R")
source("experiments/arcLight.R")
source("experiments/arcLight.R")
source("experiments/arcLight.R")
source("experiments/arcLight.R")
source("experiments/arcLight.R")
source("experiments/arcLight.R")
source("experiments/arcLight.R")
source("experiments/arcLight.R")
?mouse3d
par3d?
?par3d
source("experiments/arcLight.R")
?observer3d
observer3d(800,0,0)
observer3d(8000,0,0)
observer3d(0,0,0)
source("experiments/arcLight.R")
source("experiments/arcLight.R")
source("experiments/arcLight.R")
source("experiments/arcLight.R")
source("experiments/arcLight.R")
source("experiments/arcLight.R")
source("experiments/arcLight.R")
source("experiments/arcLight.R")
source("experiments/arcLight.R")
source("experiments/arcLight.R")
?highlevel()
?highlevel
source("experiments/arcLight.R")
source("experiments/singleRayWithDebug.R")
source("experiments/arcLight.R")
source("experiments/singleRayWithDebug.R")
source("experiments/singleRayWithDebug.R")
source("experiments/singleRayWithDebug.R")
source("experiments/singleRayWithDebug.R")
source("experiments/singleRayWithDebug.R")
source("experiments/singleRayWithDebug.R")
paramters
parameters
q()
source("experiments/singleRayWithDebug.R")
source("experiments/arcLight.R")
source("experiments/singleRayWithDebug.R")
source("experiments/singleRayWithDebug.R")
source("experiments/singleRayWithDebug.R")
source("experiments/singleRayWithDebug.R")
source("experiments/singleRayWithDebug.R")
source("experiments/singleRayWithDebug.R")
source("experiments/singleRayWithDebug.R")
source("experiments/singleRayWithDebug.R")
source("experiments/singleRayWithDebug.R")
source("experiments/singleRayWithDebug.R")
source("experiments/singleRayWithDebug.R")
source("experiments/singleRayWithDebug.R")
source("experiments/singleRayWithDebug.R")
constants()
source("ui.R")
source("ui.R")
physicalConstants()
source("ui.R")
plotRefractiveIndex()
source("ui.R")
plotRefractiveIndex()
refractiveIndex(500)
source("ui.R")
plotRefractiveIndex()
constants()$visbleMin
constants()$visibleMin
source("ui.R")
plotRefractiveIndex()
source("ui.R")
source("ui.R")
plotRefractiveIndex()
data
data
data
data
sapply(fun=lambda2rgb,X=data$lambda)
sapply(FUN=lambda2rgb,X=data$lambda)
data
sapply(FUN=lambda2rgb,X=data$lambda)
c <- sapply(FUN=lambda2rgb,X=data$lambda)
data$color <- c
data
source("ui.R")
plotFancyRefractiveIndex()
source("ui.R")
plotFancyRefractiveIndex()
source("ui.R")
plotFancyRefractiveIndex()
source("ui.R")
plotFancyRefractiveIndex()
source("ui.R")
plotFancyRefractiveIndex()
?theme
source("ui.R")
plotFancyRefractiveIndex()
source("ui.R")
plotFancyRefractiveIndex()
source("ui.R")
plotFancyRefractiveIndex()
source("ui.R")
plotFancyRefractiveIndex()
source("ui.R")
plotFancyRefractiveIndex()
source("ui.R")
plotFancyRefractiveIndex()
source("ui.R")
plotFancyRefractiveIndex()
source("ui.R")
plotFancyRefractiveIndex()
plotRefractiveIndex()
source("ui.R")
plotRefractiveIndex()
source("ui.R")
source("ui.R")
plotRefractiveIndex()
source("ui.R")
traceOneRay()
source("ui.R")
source("ui.R")
source("ui.R")
traceOneRay()
traceOneRay()
source("ui.R")
traceOneRay()
source("ui.R");traceOneRay()
n
spectrumRays
str(spectrumRays)
str(spectrumRays)
n
str(tracedRays)
n
render(fullScene)
n
Q
source("ui.R");traceOneRay()
Q
source("ui.R");traceOneRay()
traceOneRay(1)
traceOneRay(2)
uniformSpectrum(steps=3)
source("ui.R");traceOneRay()
source("ui.R");traceOneRay()
source("ui.R");traceOneRay(30,4)
source("ui.R");traceOneRay(30,4)
source("ui.R");traceOneRay(30,4)
source("ui.R");traceOneRay(30,4,TRUE)
source("ui.R");traceOneRay(1,5,TRUE)
source("ui.R");traceOneRay(1,5,TRUE)
source("ui.R");traceOneRay(1,5,TRUE)
source("ui.R");traceOneRay(1,5,TRUE)
source("ui.R")
generateRainbows()
source("ui.R")
generateRainbows()
generateRainbows( angleSteps=1000)
generateRainbows( angleSteps=1000,nColors=20)
dm <- generateRainbows( angleSteps=1000,nColors=2)
dm <- generateRainbows( angleSteps=1000,nColors=2)
source("plot.R"),plotPDF(dm)
source("plot.R");plotPDF(dm)
source("plot.R");plotPDF(dm)
dm
source("ui.R")
dm <- generateRainbows( angleSteps=1000,nColors=2)
source("ui.R")
dm <- generateRainbows( angleSteps=1000,nColors=2)
source("ui.R")
dm <- generateRainbows( angleSteps=1000,nColors=2)
source("ui.R")
dm <- generateRainbows( angleSteps=1000,nColors=2)
traceback()
source("ui.R")
dm <- generateRainbows( angleSteps=1000,nColors=2)
source("ui.R")
dm <- generateRainbows( angleSteps=1000,nColors=2)
plotPDF(dm)
dm <- generateRainbows(rainbows=c(1,2,3,4),angleSteps=1000,nColors=2)
plotPDF(dm)
source("plot.R");plotPDF(dm)
str(dm)
source("plot.R");plotPDF(dm)
source("plot.R");plotPDF(dm)
source("plot.R");plotPDF(dm)
source("plot.R");plotPDF(dm)
source("plot.R");plotLines(dm)
source("plot.R");plotLines(dm)
source("plot.R");plotLines(dm)
source("plot.R");plotLines(dm)
source("plot.R");plotLines(dm)
source("plot.R");plotLines(dm)
source("plot.R");plotLines(dm)
source("plot.R");plotLines(dm)
source("plot.R");plotLines(dm)
source("plot.R");plotLines(dm)
source("ui.R")
dm <- generateRainbows(rainbows=c(1,2,3,4),angleSteps=1000,nColors=5)
dm <- generateRainbows(rainbows=c(1,2,3),angleSteps=1000,nColors=5)
source("plot.R");plotPDFLines(dm)
plotPDFLines(dm)
source("plot.R");
plotPDFLines(dm)
plotPDFLines(dm)
dm <- generateRainbows(rainbows=c(1,2,3,4),angleSteps=1000,nColors=5)
str(dm)
hist(dm$angInDeg)
q()
source("ui.R")
physicalConstants()
plotRefractiveIndex()
dm <- generateRainbows()
dm <- generateRainbows(resolution=90)
source("ui.R")
dm <- generateRainbows(resolution=90)
source("ui.R")
dm <- generateRainbows(resolution=90)
source("ui.R")
dm <- generateRainbows(resolution=90)
source("ui.R")
dm <- generateRainbows()
source("ui.R")
dm <- generateRainbows()
dm <- generateRainbows(resolution=0.1)
hist(dm$angInDeg)
hist(dm$angInDeg)
hist(dm$angInDeg[dm$angInDeg<1])
hist(dm$angInDeg[dm$angInDeg<0.5])
hist(dm$angInDeg[dm$angInDeg<1],breaks=10)
hist(dm$angInDeg[dm$angInDeg<0.2],breaks=10)
dm$angInDeg[dm$angInDeg<0.2]$angInDeg
dm$angInDeg[dm$angInDeg<0.2]
dm$angInDeg[dm$angInDeg<0.5]
dm$angInDeg[,.N,by=.(angInDeg)]
dm[,.N,by=.(angInDeg)]
str(dm)
source("ui.R")
dm <- generateRainbows()
dm <- generateRainbows()
dm <- generateRainbows(resolution=0.1)
source("ui.R")
dm <- generateRainbows(resolution=0.1)
traceOneRay()
str(dm)
dm[,.(.N),by=.(rainbowNo,angDeg,lambda)]
dm[,.(.N),by=.(rainbowNo,angDDeg,lambda)]
ed(dm[,.(.N),by=.(rainbowNo,angDDeg,lambda)])
dm$bin <- cut(dm$angDDeg,breaks=900)
ed(dm[,.(.N),by=.(rainbowNo,bin,lambda)])
ed(dm[,.(.N,angD=mean(angDDeg)),by=.(rainbowNo,bin,lambda)])
hist(dm$angDDeg)
str(dm)
hist(dm$angDDeg)
dmAgg <- (dm[,.(.N,angD=mean(angDDeg)),by=.(rainbowNo,bin,lambda)])
ggplot(data=dmAgg) + geom_point(aes(x=angD,y=N,color=lambda,shape=rainbowNo))
ggplot(data=dmAgg) + geom_point(aes(x=angD,y=N,color=as.factor(lambda),shape=rainbowNo))
ggplot(data=dmAgg) + geom_line(aes(x=angD,y=N,color=as.factor(lambda))) + facet_grid(rainbowNo~.)
dm$bin <- cut(dm$angDDeg,breaks=200)
dmAgg <- (dm[,.(.N,angD=mean(angDDeg)),by=.(rainbowNo,bin,lambda)])
ggplot(data=dmAgg) + geom_line(aes(x=angD,y=N,color=as.factor(lambda))) + facet_grid(rainbowNo~.)
windows()
plotPDFLines(dm)
ggplot(data=dmAgg) + geom_line(aes(x=angD,y=N,color=as.factor(lambda))) + facet_grid(rainbowNo~.)
dmAgg <- (dm[angDDeg<60,.(.N,angD=mean(angDDeg)),by=.(rainbowNo,bin,lambda)])
dm2 <- dm[angDDeg<60]
dm2$bin <- cut(dm$angDDeg,breaks=200)
dm2$bin <- cut(dm$angDDeg,breaks=200)
dm2$bin <- cut(dm2$angDDeg,breaks=200)
dmAgg <- (dm2[angDDeg<60,.(.N,angD=mean(angDDeg)),by=.(rainbowNo,bin,lambda)])
windows()
ggplot(data=dmAgg) + geom_line(aes(x=angD,y=N,color=as.factor(lambda))) + facet_grid(rainbowNo~.)
windows()
plotPDFLines(dm)
ggplot(data=dmAgg) + geom_line(aes(x=angD,y=N,color=as.factor(lambda)),size=2) + facet_grid(rainbowNo~.)
source("generateRainbows.R")
windows()
dmAgg <- aggregateData(dm)
ggplot(data=dmAgg) + geom_line(aes(x=angD,y=N,color=as.factor(lambda)),size=3) + facet_grid(rainbowNo~.)
source("generateRainbows.R")
source("ui.R")
genererateRainbows(rainbows=c(1,2,3),resolution=0.1)
generateRainbows(rainbows=c(1,2,3),resolution=0.1)
source("ui.R")
generateRainbows(rainbows=c(1,2,3,4),resolution=0.1)
generateRainbows(rainbows=c(1,2,3,4,5,6),resolution=0.1)
