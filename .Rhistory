rd_4_20_0_05 <- generateRainbows(c(1,2,3,4) nColors = 20, resolution = 0.05)
rd_4_20_0_05 <- generateRainbows(c(1,2,3,4), nColors = 20, resolution = 0.05)
str(rd_4_20_0_05)
fwrite(x=rd_4_20_0_05,file="externalData/rayTracingData20Colors0_05resolution.csv")
fwrite(x=rd_4_20_0_05,file="extdata/rayTracingData20Colors0_05resolution.csv")
rayData <- prepareData(rd_4_20_0_05)
plotPDF(aggregateData(rayData,TRUE,TRUE))
plotPDF(aggregateData(rayData,TRUE)
)
plotPDF(aggregateData(rayData)
)
plotPDF(aggregateData(rayData,nBreaks=360))
plotPDF(aggregateData(rayData,aggregateRainbows=TRUE,nBreaks=360))
plotPDF(aggregateData(rayData,aggregatecolors=TRUE,nBreaks=360))
plotPDF(aggregateData(rayData,aggregateColors=TRUE,nBreaks=360))
plotPDF(aggregateData(rayData,aggregateLambda=TRUE,nBreaks=360))
plotIntensities(aggregateData(rayData,nBreaks = 360)
)
traceback()
 tis <- intensities(aggregateData(rayData,nBreaks = 360)
)
ed(tis)
load_all()
 tis <- intensities(aggregateData(rayData,nBreaks = 360))
str(tis)
pdfData <- aggregateData(rayData,nBreaks = 360))
pdfData <- aggregateData(rayData,nBreaks = 360)
str(pdfData)
pdfData[,.N,by=.(rainbowNo,lambda)]
 tis <- intensities(pdfData)
str(tis)
load_all()
 tis <- intensities(pdfData)
load_all()
 tis <- intensities(pdfData)
ed(tis)
load_all()
plotIntensities(pdfData)
load_all()
load_all()
plotIntensities(pdfData)
plotMaxima(pdfData)
load_all()
trd <- generateRainbwos()
trd <- generateRainbows()
load_all()
trd <- generateRainbows()
load_all()
trd <- generateRainbows()
load_all()
trd <- generateRainbows()
load_all()
trd <- generateRainbows()
load_all()
trd <- generateRainbows()
traceback()
load_all()
trd <- generateRainbows()
load_all()
trd <- generateRainbows()
ed(trd)
plotPDF(aggregateData(rayData))
plotPDFLines((rayData))
ed(aggregateData(trd))
load_all()
trd <- generateRainbows()
load_all()
trd <- generateRainbows()
str(pdfData)
Q
load_all()
trd <- generateRainbows()
Q
load_all()
trd <- generateRainbows()
str(dataMatrix)
q
Q
load_all()
trd <- generateRainbows()
str(dataMatrix)
n
str(rayData)
n
n
Q
load_all()
str(dataMatrix)
trd <- generateRainbows()
n
n
n
str(rayData)
c
c
str(trd)
unique(trd$color)
plotPDF(pdfData)
plotPDF(aggregateData(trd)))
plotPDF(aggregateData(trd))
load_all()
load_all()
plotPDF(aggregateData(trd))
unique(rayData$color)
unique(rayData$lambda)
unique(pdfData$lambda)
unique(pdfData$color)
str(pdfData)
unique(pdfData$lambda)
sapply(X=unique(pdfData$lambda),FUN=lambda2rgb)
Q
load_all()
trd <- generateRainbows()
c
c
load_all()
load_all()
trd <- generateRainbows()
n
cols
c
load_all()
trd <- generateRainbows()
plotPDF(aggregateData(trd))
load_all()
trd <- generateRainbows()
trd <- generateRainbows(c(1,2,3,4),nColors=10)
str(trd)
document()
install()
str(trd)
maxima(aggregateData(rayData,nBreaks=90)
maxima(aggregateData(rayData,nBreaks=90))
load_all()
maxima(aggregateData(rayData,nBreaks=90))
maxima(aggregateData(rayData[rainbowNo==1],nBreaks=90))
maxima(aggregateData(rayData[rainbowNo==1&lambda< 450],nBreaks=90))
maxima(aggregateData(rayData[rainbowNo==1&lambda< 450],nBreaks=180))
maxima(aggregateData(rayData[rainbowNo==1&lambda< 450],nBreaks=360))
maxima(aggregateData(rayData[rainbowNo==1&lambda< 450],nBreaks=720)
)
maxima(aggregateData(rayData[rainbowNo==1&lambda< 450],nBreaks=500))
maxima(aggregateData(rayData[rainbowNo==1&lambda == 390],nBreaks=500))
bfn <- function(x) <- {maxima(aggregateData(rayData[rainbowNo==1&lambda == 390],nBreaks=500))}
bfn <- function(x){maxima(aggregateData(rayData[rainbowNo==1&lambda == 390],nBreaks=500))}
bfn(200)
bfn(200)$angD
bfn <- function(x){maxima(aggregateData(rayData[rainbowNo==1&lambda == 390],nBreaks=500))$angD}
bfn(200)
ns <- seq(from=90,to=720,by=2)
ns
plot(sapply(X=ns,FUN=bfn),ns)
(sapply(X=ns,FUN=bfn)
)
bfn <- function(x){maxima(aggregateData(rayData[rainbowNo==1&lambda == 390],nBreaks=x)$angD}
bfn <- function(x){maxima(aggregateData(rayData[rainbowNo==1&lambda == 390],nBreaks=500))$angD}
bfn <- function(x){maxima(aggregateData(rayData[rainbowNo==1&lambda == 390],nBreaks=x))$angD}
ns
plot(sapply(X=ns,FUN=bfn),ns)
ns <- seq(from=90,to=1440,by=4)
plot(sapply(X=ns,FUN=bfn),ns)
ns <- seq(from=1000,to=1440,by=4)
angs <- sapply(X=ns,FUN=bfn)
summary(angs)
bfn <- function(x){maxima(aggregateData(rayData[rainbowNo==1&lambda == 390],nBreaks=x))$angDMean}
angs <- sapply(X=ns,FUN=bfn)
summary(angs)
ns <- seq(from=90,to=1440,by=4)
plot(sapply(X=ns,FUN=bfn),ns)
bfnMean <- function(x){maxima(aggregateData(rayData[rainbowNo==1&lambda == 390],nBreaks=x))$angDMean}
bfn <- function(x){maxima(aggregateData(rayData[rainbowNo==1&lambda == 390],nBreaks=x))$angD}
plot(sapply(X=ns,FUN=bfn),ns,col=red)
plot(sapply(X=ns,FUN=bfn),ns,col="red")
par(new=T)
plot(sapply(X=ns,FUN=bfnMean),ns,col="blue")
plot(sapply(X=ns,FUN=bfn),ns,col="red",xlim=c(38,38.6))
par(new=T)
plot(sapply(X=ns,FUN=bfnMean),ns,col="blue",xlim=c(38,38.6))
plot(sapply(X=ns,FUN=bfn),ns,col="red",xlim=c(38,39.6)
)
par(new=T)
plot(sapply(X=ns,FUN=bfnMean),ns,col="blue",xlim=c(38,39.6))
rayData_4_20_0_001 <- generateRainbows(c(1,2,3,4),nColors=20,resolution=0.001)
traceOneRay()
use_testthat()
install.packages("testthat")
use_testthat()
pwd
source("tests/test_math.R")
source("tests/test_math.R")
CM
test()
test()
traceback()
test()
source("tests/testthat/test_math.R")
angle(CM,v45)*180/pi
angle(unlist(CM,v45)*180/pi)
unlist(angle(CM,v45)*180/pi)
c(angle(CM,v45)*180/pi)
c(angle(CM,v45)*180/pi) == 45
c(angle(CM,v45)*180/pi) > 30
c(angle(CM,v45)*180/pi) -45
test()
test()
source("tests/testthat/test_physics.R")
test_function(pi/3)
testFunction(pi/3)
source("tests/testthat/test_physics.R")
source("tests/testthat/test_physics.R")
test()
td <- generateRainbows(c(1,2),nColors=2, resolution=10)
str(td)
sum(td$angD)
load_all()
td <- generateRainbows(c(1,2),nColors=2, resolution=10,plot=FALSE)
load_all()
td <- generateRainbows(c(1,2),nColors=2, resolution=10,plot=FALSE)
td <- generateRainbows(c(1,2),nColors=2, resolution=10)
sum(td$angD)
round(sum(td$angD),6)
round(sum(td$angD),4)
attr(td)
str(td)
source("tests/testthat/test_rainbows.R")
attr(td,"intenstityMethod")
attr(td,"intensityMethod")
source("tests/testthat/test_rainbows.R")
attr(td,"intensityMethod")
source("tests/testthat/test_rainbows.R")
load_all()
test()
source("tests/testthat/test_rainbows.R")
load_all()
source("tests/testthat/test_rainbows.R")
test()
plotRefractiveIndex()
load_all()
plotRefractiveIndex()
help(package="rainbowLab")
help(package=rainbowLab)
document()
document()
document()
document()
document()
document()
install()
help(package=rainbowLab)
use_vignette("rainbwLab")
install.packages("rmarkdown")
use_vignette("rainbwLab")
document()
knit()
build_vignette()
devtools::build_vignette()
devtools::use_vignette()
usethis::use_vignette()
usethis::build_vignette()
usethis::use_vignette()
usethis::use_vignette(name="rainbowLab.Rmd")
devtools::build_vignette()
usethis::build_vignette()
load_all()
devtools::build_vignette()
help(library=devtools)
help(pacakge=devtools)
help(package=devtools)
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
str(rayData)
str(pdfData)
document()
devtools::build_vignettes()
document()
devtools::build_vignettes()
devtools::build()
remove.packages(pkgs=rainbowLab)
remove.packages(pkgs="rainbowLab")
library("rainbowLab")
library(rainbowLab)
remove.packages(pkgs="rainbowLab")
q()
library(rainnbowLab)
library(rainbowLab)
data(rayData)
pdfData <- aggergateData(rayData)
pdfData <- aggregateData(rayData)
plotPDF(pdfData)
pdfData <- aggregateData(rayData,aggregateRainbows=TRUE)
plotPDF(pdfData)
plotIntensities(pdfData)
pdfData <- aggregateData(rayData)
plotIntensities(pdfData)
plotMaxima(pdfData)
document()
devtools::document()
devtools::install()
q()
library(rainbowLab)
data(rayData)
pdfData <- aggregateData(rayData)
plotMaxima(pdfData)
vignette("rainbowLab")
vignette("rainbowLab")
help(package=rainbowLab)
vignette("rainbowLab")
vignette(rainbowLab)
vignette("rainbowLab")
devtools::build_vignettes()
q()
library(devtools)
build_vignettes()
build_vignettes()
build_vignettes()
build_vignettes()
build_vignettes()
build_vignettes()
build_vignettes()
build_vignettes()
build_vignettes()
build_vignettes()
build_vignettes()
build_vignettes()
build_vignettes()
build_vignettes()
document()
install()
library(rainbowLab)
vignettes("rainbowLab")
vignette("rainbowLab")
?vignette
 vignette()
browseVignettes()
build()
remove.packages("rainbowLab")
install.packages("c:/Users/wartenberg/dev/rainbowLab_0.9.0.1.tar.gz")
linbrary(rainbowLab)
library(rainbowLab)
vignette("rainbowLab")
browseVignettes()
build_vignettes()
document()
build()
remove.packages("rainbowLab")
install.packages("c:/Users/wartenberg/dev/rainbowLab_0.9.0.2.tar.gz")
vignette("rainbowLab")
vignette("rainbowLab*")
browseVignettes()
build_vignettes()
build()
remove.packages("rainbowLab")
q()
install.packages("c:/Users/wartenberg/dev/rainbowLab_0.9.0.2.tar.gz")
vignette("rainbowLab")
vignette("rainbowLab Usage")
vignette("rainbowLabUsage")
vignette("elementaryUsage")
remove.packages("rainbowLab")
build_vignettes()
library(devtools)
build_vignettes()
build()
remove.packages("rainbowLab")
q()
install.packages("c:/Users/wartenberg/dev/rainbowLab_0.9.0.2.tar.gz")
vignette("rainbowLab")
 library(devtools)
build()
browseVignettes()
?ri
help(library="rainbowLab")
help(package="rainbowLab")
document()
build_vignettes()
build()
install.packages("c:/Users/wartenberg/dev/rainbowLab_0.9.0.3.tar.gz")
?refractiveIndexFunctionGenerator
?refractiveIndexFnGenerator
?refractiveIndexFnGenerator
?refractiveIndexFnGenerator
?refractiveIndexFnGenerator
?refractiveIndexFnGenerator
q()
library(rainbowLab)
vignettes(rainbowLab)
vignette(rainbowLab)
vignette(elementaryUsage)
vignettes()
 browseVignettes()
?approxfun
data(rayData)
pdfData <- aggergateData(rayData)
pdfData <- aggegateData(rayData)
pdfData <- aggregateData(rayData)
plotPDF(pdfData)
plotIntensities(pdfData)
remove.packages("rainbowLab")
q()
library(devtools)
q()
library(rainbowLab)
plotFresnel()
getwd()
?magrittr
?rainbowLab
package?rainbowLab
help(package="rainbowLab")
document()
library(devtools)
document()
build_vignettes()
build()
remove.packages("rainbowLab")
q()
data(rayData)
library(rainbowLab)
data(rayData)
pdfData <- aggregateData(rayData,aggregateLambda=TRUE)
mama(pdfData)
plotMaxima(pdfData)
str(pdfData)
pdfData
maxima(pdfData)
source("../rainbowScript.R")
source("../rainbowScript.R")
source("../rainbowScript.R")
source("../rainbowScript.R")
source("../rainbowScript.R")
source("../rainbowScript.R")
?maxima
?fresnel
library(devtools)
q()
library(devtools)
load_all()
source("../rainbowScript/maxima.R")
rd_m <- prepareData(rayData)
str(rd_m)
pdf_m <- aggregateData(rd_m)
str(pdf_m)
plotMaxima(pdf_m)
load_all()
source("../rainbowScript/polarisation.R")
str(pdf_p)
str(pdf_m)
str(rd_p)
rd_s <- prepareData(rayData,intensityMethod = "fresnel_s")
str(rd_s)
source("../rainbowScript/polarisation.R")
str(pdf_p)
pdf_p[,I:=I/2]
str(pdf_p)
pdf_s[,I:=I/2]
pdf <- rbind(pdf_m,pdf_p,pdf_s)
str(pdf)
pdf[,.(I=sum(I)),by=.(intensityMethod)]
pdf[,.(I=sum(I)),by=.(intensityMethod,rainbowNo)]
pdf[,.(I=sum(I)),by=.(rainbowNo,intensityMethod)]
pdf[,.(I=sum(I)),by=.(intensityMethod,rainbowNo)]
pdf[,.(I=sum(I)),by=.(intensityMethod,rainbowNo)][order(rainbowNo)]
pdf[,.(I=sum(I)),by=.(intensityMethod,rainbowNo)][order(rainbowNo,I)]
pdf[,.(I=sum(I)),by=.(intensityMethod,rainbowNo)][order(rainbowNo,-I)]
?geom_col
ggplot(data=pdf) + geom_col(aes(x=rainbowNo,y=I,fill=intesityMethod),position="dodge")
ggplot(data=pdf) + geom_col(aes(x=rainbowNo,y=I,fill=intensityMethod),position="dodge")
pdf
relI
str(relI)
plotRefractiveIndex()
plotMaxima(aggreagteData(rayData))
plotMaxima(aggregateData(rayData))
maxima(aggregateData(rayData))
mama <- maxima(aggregateData(rayData))
mama[lambda == 602]
180-42.05
mama[lambda == 602][,.(angR = 180-angD)]
ri(602)
refractiveIndex(602)
refractiveIndex(618)
mama[lambda == 618][,.(angR = 180-angD)]
source("../rainbowScript/polarisation.R")
document()
build_vigenettes()
build_vignettes()
build()
test()
build()
build()
remove.packages("rainbowLab")
library(rainbowLab)
q()
library(rainbowLab)
library(devtools)
install_github(repo="rainbowLab", username="FredrikWartenberg")
?install_github
install_github(repo="FredrikWartenberg/rainbowLab")
q()
