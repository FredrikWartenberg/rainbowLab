n
n
n
n
r
ray(O=c(0,0,0),D = arcPoint %*% rm)
r
r <- ray(O=c(0,0,0),D = arcPoint %*% rm)
r
n
rays
n
n
r
n
n
n
n
rays
c
c
res
res[[1]]
source("physics.R")
res <- arcLight()
n
n
n
n
n
source("physics.R")
res <- arcLight()
n
n
n
n
rays
rays[[1]] <- r
rays
rays[[a]] <- r
str(r)
rays[[as.string(a)]] <- r
rays[[as.char(a)]] <- r
as.character(3)
rays[[as.character(a)]] <- r
Q
source("physics.R")
source("physics.R")
res <- arcLight()
c
res
str(res)
l <-vector("list",3)
l
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
al <- arcLigth()
al <- arcLight()
c
source("scene.R")
source("scene.R")
al <- arcLight()
c
source("scene.R")
al <- arcLight()
c
str(al)
render(al)
tracekback()
traceback()
traceback()
render(al)
traceback()
source("scene.R")
al <- arcLight()
c
render(al)
source("scene.R")
al <- arcLight()
c
render(al)
source("scene.R")
traceback()
source("scene.R")
traceback()
source("scene.R")
source("scene.R")
source("scene.R")
c
source("scene.R")
c
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
al <- arcLight()
render(al)
str(al)
al <- arcLight()
source("scene.R")
al <- arcLight()
render(al)
source("scene.R")
al <- arcLight()
render(al)
source("scene.R")
al <- arcLight()
n
r
n
str(r)
str(rr(r))
Q
source("scene.R")
al <- arcLight()
n
n
r
str(rr(r))
str(r)
c
c
c
c
c
c
c
c
c
c
al <- arcLight()
Q
source("scene.R")
render(arcLight)
al <- arcLight()
render(al)
source("scene.R")
al <- arcLight()
render(al)
source("scene.R")
al <- arcLight()
render(al)
al <- arcLight(steps=100)
render(al)
source("scene.R")
al <- arcLight(steps=100)
render(al)
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
traceback()
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
traceback()
source("scene.R")
n
source("scene.R")
ray
str(ray)
Q
source("scene.R")
r
n
name
s
n
ray
drop
s
c
s1
ray
Q
source("scene.R")
Q
source("scene.R")
traceback)
traceback()
source("scene.R")
traceback()
source("scene.R")
source("scene.R")
-nvD
ray$D
n
source("scene.R")
s
n
x
v
n
xHat
n
source("scene.R")
ray$D
c(ray$D)
Q
source("scene.R")
source("scene.R")
sL
str(sL)
source("scene.R")
source("scene.R")
source("scene.R")
sl$rayData
rayLight()
r1
rayLight(r1)
str(rayLight(r1))
str(rayLight(r1))
str(rayLight(r1)$rays)
str(arcLight(r1)$rays)
sL$rayData
r1 <- ray(O=c(-200,150,0),lambda=450)
rl <- rayLight(r1,spectrum=uniformSpectrum(steps=10))
str(r1)
str(rl)
str(rl$rays)
str(al$rays)
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
sL$rayData
source("scene.R")
source("scene.R")
install.packages('magrittr')
q()
library('magrittr')
"Hello World" %>% print
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
rnorm(20)
rnorm(20) %>% matrix(ncol=2)
rnorm(20) %>% matrix(ncol=2) >%> plot
rnorm(20) %>% matrix(ncol=2) %>% plot
rnorm(20) %>% matrix(ncol=2) %T>% plot
rnorm(20) %>% matrix(ncol=2) %T>% plot %>% colSums
cs <- rnorm(20) %>% matrix(ncol=2) %T>% plot %>% colSums
cs
?structure
structure(ray,class="rayLight")
structure(lightRays = list(),class="rayLight")
source("physics.R")
source("physics.R")
rayLightNew()
res <- rayLightNew()
str(res)
res <- rayLightNew()
res
str(res)
source("physics.R")
res <- rayLightNew()
str(res)
res[[1]]
source("shapes.R")
render(res)
source("scene.R")
render(res)
source("scene.R")
render(res)
source("physics.R")
source("scene.R")
str(res)
source("physics.R")
res <- rayLight()
res
str(res)
spectralize(res)
spr <- spectralize(res)
str(spr)
source("physics.R")
spr <- spectralize(res)
str(rays)
makeRay(560,ray))
makeRay(560,ray)
makeRay(560,rays[[1]])
chroma(560,rays[[1]])
warnings()
lapply(spectrum,FUN=makeRay,ray=rays[[1]])
str(lapply(spectrum,FUN=makeRay,ray=rays[[1]]))
lapply(rays,FUN=chroma,spectrum=spectrum)
cr <- lapply(rays,FUN=chroma,spectrum=spectrum)
str(cr)
n
n
n
n
crd <- lapply(spectrum,FUN=makeRay,ray=rays[[1]])
source("physics.R")
crd <- spectralize(rays)
n
rays
res
crd <- spectralize(rayLight())
n
n
n
n
str(crd)
crd <- spectralize(rayLight())
n
str(chromaRays)
Q
source("physics.R")
crd <- spectralize(rayLight())
n
n
n
n
str(crd)
source("physics.R")
crd <- spectralize(rayLight())
c
str(crd)
crd <- spectralize(arcLight())
c
str(crd)
source("physics.R")
crd <- spectralize(arcLight())
str(crd)
source("physics.R")
crd <- spectralize(arcLight())
str(rays)
Q
crd <- spectralize(arcLight(steps=3))
rays
str(rays)
n
str(chromaRays)
Q
install.packages("listviewer")
library(listviewer)
jsonedit(chromaRays)
crd <- spectralize(arcLight(steps=3))
n
jsonedit(chromaRays)
Q
source("physics.R")
crd <- spectralize(arcLight(steps=3))
s
s
s
s
s
Q
crd <- spectralize(arcLight(steps=3))
str(ray)
str(rays)
ray
Q
source("physics.R")
source("physics.R")
crd <- spectralize(arcLight(steps=3))
str(Sray)
Q
source("physics.R")
crd <- spectralize(arcLight(steps=3))
str(rays)
n
str(Sray)
str(spectrum)
Q
crd <- spectralize(arcLight(steps=3))
jsonedit(rays)
str(rays)
rays$0
rays$""
rays$"0"
rays[[1]]
lapply(spectrum,FUN=makeRay,wray=rays[[1]])
jsonedit(lapply(spectrum,FUN=makeRay,wray=rays[[1]]))
l1 <- (lapply(spectrum,FUN=makeRay,wray=rays[[1]]))
str(l1)
jsonedit(l1)
jsonedit(unlist(l1))
jsonedit(l1)
l1[[1]]
str(l1[[1]])
s1 <- sapply(spectrum,FUN=makeRay,wray=Sray)
s1 <- (sapply(spectrum,FUN=makeRay,wray=rays[[1]]))
str(s1)
jsonedit(s1)
Q
source("physics.R")
crd <- spectralize(arcLight(steps=3))
n
n
n
i
rays
str(rays)
length(rays)
length(rays$rays)
Q
source("physics.R")
crd <- spectralize(arcLight(steps=3))
n
n
i
n
l
n
name
Q
source("physics.R")
crd <- spectralize(arcLight(steps=3))
source("physics.R")
crd <- spectralize(arcLight(steps=3))
source("physics.R")
crd <- spectralize(arcLight(steps=3))
jsonedit(crd)
source("physics.R")
crd <- spectralize(arcLight(steps=3))
jsonedit(crd)
source("physics.R")
crd <- spectralize(arcLight(steps=3))
source("physics.R")
crd <- spectralize(arcLight(steps=3))
source("physics.R")
crd <- spectralize(arcLight(steps=3))
source("physics.R")
crd <- spectralize(arcLight(steps=3))
jsonedit(crd)
crd <- spectralize(rayLight))
rrd <- spectralize(rayLight)
traceback()
rrd <- spectralize(rayLight())
jsonedit(rrd)
source("scene.R")
sarl
srl
jsnedit(srl)
jsonedit(srl)
jsonedit(sal)
source("scene.R")
jsonedit(fullScene)
render(fullScene)
source("scene.R")
class(sal)
class(arcLight())
str(fullScene)
render(arcLight())
str(arcLight)
str(arcLight())
source("scene.R")
source("scene.R")
traceback()
source("scene.R")
str(rays)
jsonedit(rays)
Q
source("scene.R")
traceback()
source("scene.R")
ray$D
-nvD
t
str(ray)
ip
s
n
cross(xHat,v)
n
cross(xHat,v)
Q
source("scene.R")
source("scene.R")
c
Q
source("scene.R")
source("scene.R")
source("scene.R")
s1
str(s1)
n
str(s1)
jsonedit(s1)
t
Q
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
