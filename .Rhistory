?plotInVsOut
?plotIntensities
help(package="rainbowLab")
?renderScene
?plotRefractiveIndex
?plotInVsOut
?plotIntensities
load_all()
rayPdf <- aggregateData(rayData)
rayData <- prepareData(fread("extdata/rayData.csv"))
pdfData <- aggregateData(rayData)
plotMaxima(pdfData)
load_all()
plotInVsOut(rayData)
traceback()
load_all()
plotInVsOut(rayData)
load_all()
plotInVsOut(rayData)
load_all()
plotInVsOut(rayData)
load_all()
plotInVsOut(rayData)
plotPDFLines(rayData)
windows()
plotPDF(pdfData)
str(pdfData)
load_all()
pdfData <- aggregateData(rayData)
plotPDF(pdfData)
load_all()
pdfData <- aggregateData(rayData)
pdfData <- aggregateData(rayData)
plotPDF(pdfData)
sum(pdfData$I)
pdfData <- aggregateData(rayData,nBins=90)
pdfData <- aggregateData(rayData,nBreaks=90)
sum(pdfData$I)
pdfData <- aggregateData(rayData,nBins=90)
plotPDF(pdfData)
plotPDF(pdfData)
plotPDFLines(rayData)
windows()
plotPDFLines(rayData)
plotPDF(pdfData)
load_all()
load_all()
plotPDFLines(rayData)
load_all()
plotPDF(pdfData)
str(pdfData)
all <- pdfData[,I=sum(I),rainbowNo = 0, lambda=0,by=.(angD)]
all <- pdfData[,.(I=sum(I),rainbowNo = 0, lambda=mean(lambda)),by=.(angD)]
str(all)
sum(I)
sum(all$I)
str(all)
plotPDF(all)
str(pdfData)
all <- pdfData[,.(I=sum(I),rainbowNo = 0, lambda=500),by=.(angD)]
str(all)
all <- pdfData[,.(I=sum(I)),by=.(angD)]
str(all)
unique(pdfData$angD)
load_all()
agg <- aggregateData(rayData)
str(rayData)
rayData$binA <- as.numeric(rayData$bin)
str(rayData)
rayData$binA <- as.numeric(levels(rayData$bin))[rayData$bin] 
str(rayData)
?cut
rayData$bin <- cut(rayData$angDDeg,breaks=nBreaks,lables=FALSE)
str(rayData)
rayData$bin <- cut(rayData$angDDeg,breaks=nBreaks,labels=FALSE)
str(rayData)
?hist
rayData$bin <- cut(rayData$angDDeg,breaks=nBreaks)
str(rayData)
rayData$bin <- cut(rayData$angDDeg,breaks=30)
str(rayData)
rayData$binA - seq(from=0,to=180,length=nBreaks)
rayData$binA <- seq(from=0,to=180,length=nBreaks)
rayData$binA <- findInterval(seq(from=0,to=180,length=nBreaks),rayData$angDDeg)
rayData$binA <- findInterval(seq(from=0,to=180,length=nBreaks),)
rayData$binA <- findInterval(rayData$angDDeg,seq(from=0,to=180,length=nBreaks))
str(rayData)
str(pdfData)
rayData$bin <- cut(rayData$angDDeg,breaks=nBreaks)
plot(rayData$angDDeg~rayData$bin)
plot(rayData$angDDeg~rayData$bin,col=rayData$rainbowNo)
plot(rayData$angDDeg~rayData$bin,col=rayData$rainbowNo)
plot(pdfData$angDDeg~pdfData$bin,col=pdfData$rainbowNo)
plot(pdfData$angD~pdfData$bin,col=pdfData$rainbowNo)
pdfData[,.N,by=(angD,bin)]
pdfData[,.N,by=.(angD,bin)]
hist(pdfData[,.N,by=.(angD,bin)]$N)
summary(pdfData[,.N,by=.(angD,bin)]$N)
summary(rayData$angDDeg)
binV <- seq(from=0,to=180,length=nBreaks)
summary(binV)
rayData$binA <- findInterval(rayData$angDDeg,binV)
summary(rayData$binA)
rayData$binAA <- binV[rayData$binA]
summary(rayData$binAA)
rayData[,.(avg=avg(degD),davg=avg(degD)-binAA),by=.(binAA)]
rayData[,.(avg=mean(degD),davg=mean(degD)-binAA),by=.(binAA)]
rayData[,.(avg=mean(angD),davg=mean(angD)-binAA),by=.(binAA)]
summary(angD)
summary(rayData$angD)
binV <- seq(from=0,to=pi,length=nBreaks)
rayData$binA <- findInterval(rayData$angD,binV)
rayData$binAA <- binV[rayData$binA]
rayData[,.(avg=mean(angD),davg=mean(angD)-binAA),by=.(binAA)]
0.0078*180/pi
hist(rayData[,.(avg=mean(angD),davg=mean(angD)-binAA),by=.(binAA)]$davg*180/pi)
rayData$binAA <- binV[rayData$binA] + pi/200*0.5
rayData[,.(avg=mean(angD),davg=mean(angD)-binAA),by=.(binAA)]
Q
load_all()
ad <- aggregateData(rayData)
str(ad)
hist(ad$angD-ad$angDMean)
mean(ad$angD-ad$angDMean)
plotPDF(ad)
load_all()
plotPDF(ad)
windows()
plotPDFLines(rayData)
rdI <- prepareData(fread("extdata/rayData.csv"),intensityMethod="identity")
adI <- aggregateData(rayData)
plotPDF(adI)
adI <- aggregateData(rdI)
plotPDF(adI)
windows()
plotPDFLines(rayData)
adI <- aggregateData(rdI,nBreaks=360)
plotPDF(adI)
adI <- aggregateData(rdI,nBreaks=90)
plotPDF(adI)
adI <- aggregateData(rdI,nBreaks=720)
plotPDF(adI)
load_all()
plotPDF(adI)
plotPDF(adI[lambda!=700])
 plot(adI$I ~ adi$angD)
 plot(adI$I ~ adI$angD)
plotPDF(adI[lambda==700])
ed(adI[lambda==700])
ed(adI[lambda==700&angD<10])
plotPDF(adI[lambda==700&angD<10])
adI <- aggregateData(rdI,nBreaks=200)
plotPDF(adI)
plotPDF(adI[lambda==700&angD<10])
ed(adI[lambda==700&angD<10])
plotPDF(adI[order(angD)][lambda==700&angD<10])
ed(adI[order(angD)][lambda==700&angD<10])
plotPDF(adI[order(angD)][lambda==700&rainbowNo==1])
plotPDF(adI[order(angD)][lambda==700&rainbowNo==1])
plotPDFLines(rayData)
str(adI)
adir <- adI[,I=sum(I),by=.(lambda,angD)]
adir <- adI[,.(I=sum(I)),by=.(lambda,angD)]
adir$rainbowNo <- 0
plotPDF(adir)
windows()
plotPDFLines(rayData)
library(devtools)
library(rainbowLab)
load_all()
load_all()
rayData <- (fread("extdata/rayData.csv"))
rayData <- prepareData(fread("extdata/rayData.csv"))
ad <- aggregateData(rayData)
plotPDF(ad)
load_all()
plotPDF(ad)
plotPDF(aggregateData(rayData,TRUE,TRUE)
)
plotPDF(aggregateData(rayData,TRUE))
load_all()
plotPDF(aggregateData(rayData,TRUE))
plotPDF(aggregateData(rayData,TRUE,TRUE)
)
load_all()
plotPDF(aggregateData(rayData,TRUE,TRUE))
rayData <- prepareData(fread("extdata/rayData.csv"),intesityMethod="identity")
rayData <- prepareData(fread("extdata/rayData.csv"),intensityMethod="identity")
plotPDF(aggregateData(rayData,TRUE,TRUE))
plotPDF(aggregateData(rayData))
plotPDF(aggregateData(rayData,TRUE,FALSE))
?labs
plotPDF(aggregateData(rayData)
)
?facet_grid
load_all()
plotPDF(aggregateData(rayData))
load_all()
plotPDF(aggregateData(rayData))
load_all()
plotPDF(aggregateData(rayData))
load_all()
load_all()
plotPDF(aggregateData(rayData))
load_all()
plotPDF(aggregateData(rayData))
plotPDF(aggregateData(rayData,TRUE,FALSE))
plotPDF(aggregateData(rayData,TRUE,TRUE))
rayData <- prepareData(fread("extdata/rayData.csv"))
plotPDF(aggregateData(rayData,TRUE,TRUE))
a <- aggregateData(rayData,TRUE,TRUE)
str(a)
load_all()
a <- aggregateData(rayData,TRUE,TRUE)
plotPDF(aggregateData(rayData,TRUE,TRUE))
rd_4_20_0_05 <- generateRainbows(c(1,2,3,4) nColors = 20, resolution = 0.05)
rd_4_20_0_05 <- generateRainbows(c(1,2,3,4), nColors = 20, resolution = 0.05)
str(rd_4_20_0_05)
fwrite(x=rd_4_20_0_05,file="externalData/rayTracingData20Colors0_05resolution.csv")
fwrite(x=rd_4_20_0_05,file="extdata/rayTracingData20Colors0_05resolution.csv")
rayData <- prepareData(rd_4_20_0_05)
plotPDF(aggregateData(rayData,TRUE,TRUE))
plotPDF(aggregateData(rayData,TRUE)
)
plotPDF(aggregateData(rayData)
)
plotPDF(aggregateData(rayData,nBreaks=360))
plotPDF(aggregateData(rayData,aggregateRainbows=TRUE,nBreaks=360))
plotPDF(aggregateData(rayData,aggregatecolors=TRUE,nBreaks=360))
plotPDF(aggregateData(rayData,aggregateColors=TRUE,nBreaks=360))
plotPDF(aggregateData(rayData,aggregateLambda=TRUE,nBreaks=360))
plotIntensities(aggregateData(rayData,nBreaks = 360)
)
traceback()
 tis <- intensities(aggregateData(rayData,nBreaks = 360)
)
ed(tis)
load_all()
 tis <- intensities(aggregateData(rayData,nBreaks = 360))
str(tis)
pdfData <- aggregateData(rayData,nBreaks = 360))
pdfData <- aggregateData(rayData,nBreaks = 360)
str(pdfData)
pdfData[,.N,by=.(rainbowNo,lambda)]
 tis <- intensities(pdfData)
str(tis)
load_all()
 tis <- intensities(pdfData)
load_all()
 tis <- intensities(pdfData)
ed(tis)
load_all()
plotIntensities(pdfData)
load_all()
load_all()
plotIntensities(pdfData)
plotMaxima(pdfData)
load_all()
trd <- generateRainbwos()
trd <- generateRainbows()
load_all()
trd <- generateRainbows()
load_all()
trd <- generateRainbows()
load_all()
trd <- generateRainbows()
load_all()
trd <- generateRainbows()
load_all()
trd <- generateRainbows()
traceback()
load_all()
trd <- generateRainbows()
load_all()
trd <- generateRainbows()
ed(trd)
plotPDF(aggregateData(rayData))
plotPDFLines((rayData))
ed(aggregateData(trd))
load_all()
trd <- generateRainbows()
load_all()
trd <- generateRainbows()
str(pdfData)
Q
load_all()
trd <- generateRainbows()
Q
load_all()
trd <- generateRainbows()
str(dataMatrix)
q
Q
load_all()
trd <- generateRainbows()
str(dataMatrix)
n
str(rayData)
n
n
Q
load_all()
str(dataMatrix)
trd <- generateRainbows()
n
n
n
str(rayData)
c
c
str(trd)
unique(trd$color)
plotPDF(pdfData)
plotPDF(aggregateData(trd)))
plotPDF(aggregateData(trd))
load_all()
load_all()
plotPDF(aggregateData(trd))
unique(rayData$color)
unique(rayData$lambda)
unique(pdfData$lambda)
unique(pdfData$color)
str(pdfData)
unique(pdfData$lambda)
sapply(X=unique(pdfData$lambda),FUN=lambda2rgb)
Q
load_all()
trd <- generateRainbows()
c
c
load_all()
load_all()
trd <- generateRainbows()
n
cols
c
load_all()
trd <- generateRainbows()
plotPDF(aggregateData(trd))
load_all()
trd <- generateRainbows()
trd <- generateRainbows(c(1,2,3,4),nColors=10)
str(trd)
document()
install()
str(trd)
maxima(aggregateData(rayData,nBreaks=90)
maxima(aggregateData(rayData,nBreaks=90))
load_all()
maxima(aggregateData(rayData,nBreaks=90))
maxima(aggregateData(rayData[rainbowNo==1],nBreaks=90))
maxima(aggregateData(rayData[rainbowNo==1&lambda< 450],nBreaks=90))
maxima(aggregateData(rayData[rainbowNo==1&lambda< 450],nBreaks=180))
maxima(aggregateData(rayData[rainbowNo==1&lambda< 450],nBreaks=360))
maxima(aggregateData(rayData[rainbowNo==1&lambda< 450],nBreaks=720)
)
maxima(aggregateData(rayData[rainbowNo==1&lambda< 450],nBreaks=500))
maxima(aggregateData(rayData[rainbowNo==1&lambda == 390],nBreaks=500))
bfn <- function(x) <- {maxima(aggregateData(rayData[rainbowNo==1&lambda == 390],nBreaks=500))}
bfn <- function(x){maxima(aggregateData(rayData[rainbowNo==1&lambda == 390],nBreaks=500))}
bfn(200)
bfn(200)$angD
bfn <- function(x){maxima(aggregateData(rayData[rainbowNo==1&lambda == 390],nBreaks=500))$angD}
bfn(200)
ns <- seq(from=90,to=720,by=2)
ns
plot(sapply(X=ns,FUN=bfn),ns)
(sapply(X=ns,FUN=bfn)
)
bfn <- function(x){maxima(aggregateData(rayData[rainbowNo==1&lambda == 390],nBreaks=x)$angD}
bfn <- function(x){maxima(aggregateData(rayData[rainbowNo==1&lambda == 390],nBreaks=500))$angD}
bfn <- function(x){maxima(aggregateData(rayData[rainbowNo==1&lambda == 390],nBreaks=x))$angD}
ns
plot(sapply(X=ns,FUN=bfn),ns)
ns <- seq(from=90,to=1440,by=4)
plot(sapply(X=ns,FUN=bfn),ns)
ns <- seq(from=1000,to=1440,by=4)
angs <- sapply(X=ns,FUN=bfn)
summary(angs)
bfn <- function(x){maxima(aggregateData(rayData[rainbowNo==1&lambda == 390],nBreaks=x))$angDMean}
angs <- sapply(X=ns,FUN=bfn)
summary(angs)
ns <- seq(from=90,to=1440,by=4)
plot(sapply(X=ns,FUN=bfn),ns)
bfnMean <- function(x){maxima(aggregateData(rayData[rainbowNo==1&lambda == 390],nBreaks=x))$angDMean}
bfn <- function(x){maxima(aggregateData(rayData[rainbowNo==1&lambda == 390],nBreaks=x))$angD}
plot(sapply(X=ns,FUN=bfn),ns,col=red)
plot(sapply(X=ns,FUN=bfn),ns,col="red")
par(new=T)
plot(sapply(X=ns,FUN=bfnMean),ns,col="blue")
plot(sapply(X=ns,FUN=bfn),ns,col="red",xlim=c(38,38.6))
par(new=T)
plot(sapply(X=ns,FUN=bfnMean),ns,col="blue",xlim=c(38,38.6))
plot(sapply(X=ns,FUN=bfn),ns,col="red",xlim=c(38,39.6)
)
par(new=T)
plot(sapply(X=ns,FUN=bfnMean),ns,col="blue",xlim=c(38,39.6))
rayData_4_20_0_001 <- generateRainbows(c(1,2,3,4),nColors=20,resolution=0.001)
traceOneRay()
use_testthat()
install.packages("testthat")
use_testthat()
pwd
source("tests/test_math.R")
source("tests/test_math.R")
CM
test()
test()
traceback()
test()
source("tests/testthat/test_math.R")
angle(CM,v45)*180/pi
angle(unlist(CM,v45)*180/pi)
unlist(angle(CM,v45)*180/pi)
c(angle(CM,v45)*180/pi)
c(angle(CM,v45)*180/pi) == 45
c(angle(CM,v45)*180/pi) > 30
c(angle(CM,v45)*180/pi) -45
test()
test()
source("tests/testthat/test_physics.R")
test_function(pi/3)
testFunction(pi/3)
source("tests/testthat/test_physics.R")
source("tests/testthat/test_physics.R")
test()
td <- generateRainbows(c(1,2),nColors=2, resolution=10)
str(td)
sum(td$angD)
load_all()
td <- generateRainbows(c(1,2),nColors=2, resolution=10,plot=FALSE)
load_all()
td <- generateRainbows(c(1,2),nColors=2, resolution=10,plot=FALSE)
td <- generateRainbows(c(1,2),nColors=2, resolution=10)
sum(td$angD)
round(sum(td$angD),6)
round(sum(td$angD),4)
attr(td)
str(td)
source("tests/testthat/test_rainbows.R")
attr(td,"intenstityMethod")
attr(td,"intensityMethod")
source("tests/testthat/test_rainbows.R")
attr(td,"intensityMethod")
source("tests/testthat/test_rainbows.R")
load_all()
test()
source("tests/testthat/test_rainbows.R")
load_all()
source("tests/testthat/test_rainbows.R")
test()
plotRefractiveIndex()
load_all()
plotRefractiveIndex()
help(package="rainbowLab")
help(package=rainbowLab)
document()
document()
document()
document()
document()
document()
install()
help(package=rainbowLab)
use_vignette("rainbwLab")
install.packages("rmarkdown")
use_vignette("rainbwLab")
document()
knit()
build_vignette()
devtools::build_vignette()
devtools::use_vignette()
usethis::use_vignette()
usethis::build_vignette()
usethis::use_vignette()
usethis::use_vignette(name="rainbowLab.Rmd")
devtools::build_vignette()
usethis::build_vignette()
load_all()
devtools::build_vignette()
help(library=devtools)
help(pacakge=devtools)
help(package=devtools)
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
str(rayData)
str(pdfData)
document()
devtools::build_vignettes()
document()
devtools::build_vignettes()
devtools::build()
remove.packages(pkgs=rainbowLab)
remove.packages(pkgs="rainbowLab")
library("rainbowLab")
library(rainbowLab)
remove.packages(pkgs="rainbowLab")
q()
