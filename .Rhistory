source("scene.R")
str(s2)
source("scene.R")
n
scg
n
n
scg
n
n
n
t
getShape(ray,t)
n
scg
n
n
arrow(ip,ip+nv*drop$R,s=1/4,color="red")
n
str(scg)
n
n
n
str(scg)
n
n
n
str(scg)
c
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
str(s2)
source("scene.R")
source("scene.R")
warnings()
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
ir
str(ir)
n
str(i2o)
Q
source("scene.R")
c
str(s2)
source("scene.R")
c
str(s2)
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
fullScene
str(fullScene)
fullScene[[
fullScene$r2
str(fullScene$r2)
names(fullScene$r2)
grepl("normal",names(fullScene$r2))
grepl("Normal",names(fullScene$r2))
fullScene$r2[[r1 <- ray(O=c(-200,-150,0))
grepl("Normal",names(fullScene$r2))
which(grepl("Normal",names(fullScene$r2)))
fullScene$r2[[which(grepl("Normal",names(fullScene$r2)))]]
fullScene$r2[[which(grepl("Normal",names(fullScene$r2))]]
fullScene$r2[[1]]
str(fullScene$r2[[1]])
str(fullScene$r2[[1c(1,2)]])
str(fullScene$r2[[c(1,2)]])
str(fullScene$r2[[1,2]])
str(fullScene$r2[[1]])
str(fullScene$r2[[1]:2])
str(fullScene$r2[[1:2]])
str(fullScene$r2[1:2])
fullScene$r2[which(grepl("Normal",names(fullScene$r2))]
which(grepl("Normal",names(fullScene$r2)))
str(fullScene$r2[which(grepl("Normal",names(fullScene$r2)))])
source("scene.R")
str(fullScene)
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
str(ray())
source("scene.R")
traceback()
source("scene.R")
n
n
source("scene.R")
n
s
n
ray$color
n
n
n
n
n
n
n
n
n
Q
source("scene.R")
c
traceback()
source("scene.R")
c
c
c
source("scene.R")
Q
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
refractiveIndex(700)
source("scene.R")
riDrop <- drop()
riDrop <- drop(x=0)
str(riDrop)
drop(x=0)
drop
drop$ri(600)
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
rDrop$ri(700)
rDrop$ri(600)
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
str(scg)
source("scene.R")
source("scene.R")
source("scene.R")
str(fullScene)
str(fullScene)
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
r3
str(r3)
str(r2)
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
ls
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
constants()
constants()$visibleMax
seq(from = constants()$visibleMin, to = constants()$visibleMax, length.out=10)
source("scene.R")
uniformSpectrum()
lambda2rgb
us <- uniformSpectrum()
str(us)
apply(us,FUN=lambda2rgb)
sapply(us,FUN=lambda2rgb)
source("scene.R")
source("scene.R")
r <- ray()
rayLight(r)
res <- rayLight(r)
res
source("physics.R")
rayLight(r)
spectrum()
n
makeRay(ray)
Q
source("physics.R")
makeRay(ray)
rayLight(r)
n
makeRay(ray)
c
res
source("physics.R")
makeRay(ray)
rayLight(r)
n
n
rays
str(rays)
apply(spectrum(),FUN=makeRay)
lapply(spectrum(),FUN=makeRay)
Q
source("physics.R")
rayLight(r,spectrum=uniformSpectrum(steps=3))
n
n
uniformSpectrum(steps=3))
uniformSpectrum(steps=3)
source("physics.R")
uniformSpectrum(steps=3)
source("physics.R")
rayLight(r,spectrum=uniformSpectrum(steps=3))
n
makeRay(ray)
n
rayLight(r,spectrum=uniformSpectrum(steps=3))
spectrum()
Q
uniformSpectrum(steps=3)
rayLight(r,spectrum=uniformSpectrum(steps=3))
spectrum
Q
source("physics.R")
rayLight(r,spectrum=uniformSpectrum(steps=3))
n
n
str(rays)
c
source("scene.R")
traceback()
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
str(rs)
source("scene.R")
str(rs)
str(rs)
source("scene.R")
traceback()
traceback()
source("scene.R")
traceback()
source("scene.R")
nD
rm
as.vector((nD %*% rm))
n
c
as.vector((nD %*% rm))
c
as.vector((nD %*% rm))
nD
rm
ray
Q
source("scene.R")
c
c
rotationMatrix(nR,rA)
nR
rA
thetaE
n <- drop$ri(ray$lambda)
n
 drop$ri(ray$lambda)
ray$lambda
ri(493)
refractiveIndex(493)
Q
?interpolate
?approxfun
constants()
source("physics.R")
refractiveIndex(500)
refractiveIndex(500.1)
curve(refractiveIndex,from=300,to=900)
source("scene.R")
c
c
c
c
c
c
c
c
source("scene.R")
Q
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
str(universe)
n
str(o)
n
n
n
s
n
drop
Q
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
rm(list=ls())
source("scene.R")
source("scene.R")
q()
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
rgl.ids
rgl.ids()
clear3d(type="all")
rgl.ids()
source("scene.R")
source("scene.R")
clear3d(type="all")
rgl.ids()
source("scene.R")
clear3d(type="all")
source("scene.R")
str(drop1)
str(rDrop1)
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
universe
Q
source("scene.R")
uni
n
source("scene.R")
c
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
n
n
n
n
o
r
n
n
n
scgI
str(scgI)
n
n
s
n
n
n
n
n
r
str(r)
n
n
n
str(r)
n
n
n
str(scgI)
name
Q
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
system.time(source("scene.R"))
system.time(source("scene.R"))
writeWebGL()
writeWebGL(dir="./",file="webgl.sc")
writeWebGL(dir="./wgl",file="webgl.sc")
writeWebGL(dir = "~/dev/rainbowLab/webGL", filename = file.path(dir, "index.html"))
writeWebGL(dir = "~/dev/rainbowLab/webGL", filename = file.path(dir, "index.html"))
source("webgl.R")
source("webgl.R")
source("webgl.R")
source("webgl.R")
source("webgl.R")
source("webgl.R")
source("webgl.R")
source("webgl.R")
source("webgl.R")
source("webgl.R")
source("webgl.R")
source("webgl.R")
paste0("file://", filename)
source("webgl.R")
source("webgl.R")
source("webgl.R")
source("webgl.R")
source("webgl.R")
rm(list=ls())
source("webgl.R")
source("webgl.R")
source("webgl.R")
source("webgl.R")
source("webgl.R")
source("webgl.R")
source("webgl.R")
source("webgl.R")
source("webgl.R")
source("webgl.R")
source("webgl.R")
source("webgl.R")
source("webgl.R")
source("webgl.R")
source("webgl.R")
install.packages("pandoc")
install.packages("pandoc")
source("webgl.R")
source("webgl.R")
q()
app <- getApp("kol")
app <- open(app,interactive=TRUE)
ed(app$categorized[grepl("TELE",RDESC)])
atr(app)
str(app)
