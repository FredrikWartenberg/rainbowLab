source("scene.R")
source("scene.R")
source("scene.R")
rnorm(20)
rnorm(20) %>% matrix(ncol=2)
rnorm(20) %>% matrix(ncol=2) >%> plot
rnorm(20) %>% matrix(ncol=2) %>% plot
rnorm(20) %>% matrix(ncol=2) %T>% plot
rnorm(20) %>% matrix(ncol=2) %T>% plot %>% colSums
cs <- rnorm(20) %>% matrix(ncol=2) %T>% plot %>% colSums
cs
?structure
structure(ray,class="rayLight")
structure(lightRays = list(),class="rayLight")
source("physics.R")
source("physics.R")
rayLightNew()
res <- rayLightNew()
str(res)
res <- rayLightNew()
res
str(res)
source("physics.R")
res <- rayLightNew()
str(res)
res[[1]]
source("shapes.R")
render(res)
source("scene.R")
render(res)
source("scene.R")
render(res)
source("physics.R")
source("scene.R")
str(res)
source("physics.R")
res <- rayLight()
res
str(res)
spectralize(res)
spr <- spectralize(res)
str(spr)
source("physics.R")
spr <- spectralize(res)
str(rays)
makeRay(560,ray))
makeRay(560,ray)
makeRay(560,rays[[1]])
chroma(560,rays[[1]])
warnings()
lapply(spectrum,FUN=makeRay,ray=rays[[1]])
str(lapply(spectrum,FUN=makeRay,ray=rays[[1]]))
lapply(rays,FUN=chroma,spectrum=spectrum)
cr <- lapply(rays,FUN=chroma,spectrum=spectrum)
str(cr)
n
n
n
n
crd <- lapply(spectrum,FUN=makeRay,ray=rays[[1]])
source("physics.R")
crd <- spectralize(rays)
n
rays
res
crd <- spectralize(rayLight())
n
n
n
n
str(crd)
crd <- spectralize(rayLight())
n
str(chromaRays)
Q
source("physics.R")
crd <- spectralize(rayLight())
n
n
n
n
str(crd)
source("physics.R")
crd <- spectralize(rayLight())
c
str(crd)
crd <- spectralize(arcLight())
c
str(crd)
source("physics.R")
crd <- spectralize(arcLight())
str(crd)
source("physics.R")
crd <- spectralize(arcLight())
str(rays)
Q
crd <- spectralize(arcLight(steps=3))
rays
str(rays)
n
str(chromaRays)
Q
install.packages("listviewer")
library(listviewer)
jsonedit(chromaRays)
crd <- spectralize(arcLight(steps=3))
n
jsonedit(chromaRays)
Q
source("physics.R")
crd <- spectralize(arcLight(steps=3))
s
s
s
s
s
Q
crd <- spectralize(arcLight(steps=3))
str(ray)
str(rays)
ray
Q
source("physics.R")
source("physics.R")
crd <- spectralize(arcLight(steps=3))
str(Sray)
Q
source("physics.R")
crd <- spectralize(arcLight(steps=3))
str(rays)
n
str(Sray)
str(spectrum)
Q
crd <- spectralize(arcLight(steps=3))
jsonedit(rays)
str(rays)
rays$0
rays$""
rays$"0"
rays[[1]]
lapply(spectrum,FUN=makeRay,wray=rays[[1]])
jsonedit(lapply(spectrum,FUN=makeRay,wray=rays[[1]]))
l1 <- (lapply(spectrum,FUN=makeRay,wray=rays[[1]]))
str(l1)
jsonedit(l1)
jsonedit(unlist(l1))
jsonedit(l1)
l1[[1]]
str(l1[[1]])
s1 <- sapply(spectrum,FUN=makeRay,wray=Sray)
s1 <- (sapply(spectrum,FUN=makeRay,wray=rays[[1]]))
str(s1)
jsonedit(s1)
Q
source("physics.R")
crd <- spectralize(arcLight(steps=3))
n
n
n
i
rays
str(rays)
length(rays)
length(rays$rays)
Q
source("physics.R")
crd <- spectralize(arcLight(steps=3))
n
n
i
n
l
n
name
Q
source("physics.R")
crd <- spectralize(arcLight(steps=3))
source("physics.R")
crd <- spectralize(arcLight(steps=3))
source("physics.R")
crd <- spectralize(arcLight(steps=3))
jsonedit(crd)
source("physics.R")
crd <- spectralize(arcLight(steps=3))
jsonedit(crd)
source("physics.R")
crd <- spectralize(arcLight(steps=3))
source("physics.R")
crd <- spectralize(arcLight(steps=3))
source("physics.R")
crd <- spectralize(arcLight(steps=3))
source("physics.R")
crd <- spectralize(arcLight(steps=3))
jsonedit(crd)
crd <- spectralize(rayLight))
rrd <- spectralize(rayLight)
traceback()
rrd <- spectralize(rayLight())
jsonedit(rrd)
source("scene.R")
sarl
srl
jsnedit(srl)
jsonedit(srl)
jsonedit(sal)
source("scene.R")
jsonedit(fullScene)
render(fullScene)
source("scene.R")
class(sal)
class(arcLight())
str(fullScene)
render(arcLight())
str(arcLight)
str(arcLight())
source("scene.R")
source("scene.R")
traceback()
source("scene.R")
str(rays)
jsonedit(rays)
Q
source("scene.R")
traceback()
source("scene.R")
ray$D
-nvD
t
str(ray)
ip
s
n
cross(xHat,v)
n
cross(xHat,v)
Q
source("scene.R")
source("scene.R")
c
Q
source("scene.R")
source("scene.R")
source("scene.R")
s1
str(s1)
n
str(s1)
jsonedit(s1)
t
Q
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
jsonedit(arcLFollow)
library(listviwer)
library(listviewer)
jsonedit(arcLFollow)
testPlot <- (arcLFollow)
source("scene.R")
source("scene.R")
source("scene.R")
zHat
x
n
n
n
n
n
traceback()
source("scene.R")
source("scene.R")
c
source("scene.R")
c
c
c
c
Q
source("scene.R")
warnings()
?plot3d
stra(arcLFollow)
str(arcLFollow)
str(arcLFollow$rayData)
pd <- (arcLFollow$rayData)
plot3d(pd$lambda,pd$andIn,pd$angOut)
plot3d(pd$lambda,pd$angIn,pd$angOut)
plot(pd$lambda,pd$angIn)
plot3d(pd$lambda,pd$angIn,pd$angOut)
plot3d(pd$lambda,pd$angIn,(pd$angOut-pd$angIn))
plot(pd$lambda,(pd$angOut-pd$angIn)))
plot(pd$lambda,(pd$angOut-pd$angIn))
end = c(-100,200,0)
origin = c(-100,0,0)
steps = 10
dVector <- (end - origin)/steps
dVector
 1:10
 1:10 * dVector
 dVector * 1:10
lapply(1:10,FUN = function(x){dVector*x})
str(lapply(1:10,FUN = function(x){dVector*x}))
str(lapply(0:steps,FUN = function(x){dVector*x}))
str(lapply(0:steps,FUN = function(x){dVector*x}))
source("physics.R")
source("physics.R")
lineLight()
source("physics.R")
lineLight()
n
dVector
n
Q
source("physics.R")
lineLight()
n
n
str(rayOs)
n
str(rays)
jsonedit(rays)
n
n
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
source("scene.R")
traceback()
source("scene.R")
fineLFollow <- spectralize(lineL)
jsonedit(fineLFollow)
lineLFollow <- sendLight(rays=fineLFollow,universe=univ,observer=follow)
traceback()
source("scene.R")
source("scene.R")
n
n
n
n
n
n
n
n
n
n
n
source("scene.R")
n
n
n
n
n
n
n
n
n
str(rays$chromaRays)
n
n
source("scene.R")
c
source("scene.R")
source("scene.R")
str(lineFollow)
str(lineLFollow$rayData)
pd <- (lineLFollow$rayData)
source("plot.R")
source("plot.R")
plot1(pd)
str(pd)
source("plot.R")
str(pd)
source("plot.R");plot1(pd)
source("plot.R");plot1(pd)
pd
plot(data=pd,lambda~angOut)
plot(data=pd,lambda~(angIn-angOut))
plot(data=pd,(angIn-angOut)~lambda)
plot(data=pd,(angIn)~lambda)
source("plot.R");plot1(pd)
source("plot.R");plot1(pd)
source("plot.R");plot1(pd)
ggplot(data=pd) + geom_point(aes(x=lambda,y=angOut))
source("plot.R");plot1(pd)
source("plot.R");plot1(pd)
source("plot.R");plot1(pd)
source("plot.R");plot1(pd)
source("plot.R");plot1(pd)
source("plot.R");plot1(pd)
source("plot.R");plot1(pd)
source("plot.R");plot1(pd)
source("plot.R");plot1(pd)
source("plot.R");plot1(pd)
source("plot.R");plot1(pd)
source("plot.R");plot1(pd)
pd
pd$angIn <- pd$angIn*180/pi
unique(pd$angIn)
pd$angIn <- pd$angIn/180*pi
pdâ‚¬angInDeg <- pd$angIn*180/pi
pd$angInDeg <- pd$angIn*180/pi
unique(pd$angDeg)
unique(pd$angInDeg)
pd$angInDeg <- round(pd$angIn*180/pi)
unique(pd$angInDeg)
pd$angInDeg <- as.factor(round(pd$angIn*180/pi))
unique(pd$angInDeg)
str(pd)
source("plot.R");plot1(pd)
source("plot.R");plot1(pd)
source("plot.R");plot1(pd)
?theme
source("plot.R");plot1(pd)
source("plot.R");plot1(pd)
?geom_point
source("scene.R")
 pd <- prepareData(lineLFollow$rayData)
source("plot.R");plot1(pd)
str(pd)
 pd <- prepareData(lineLFollow$rayData)
source("plot.R");plot1(pd)
 pd <- prepareData(lineLFollow$rayData)
source("plot.R")
 pd <- prepareData(lineLFollow$rayData)
ps
str(ps)
str(pd)
source("plot.R")
source("plot.R");plot1(pd)
source("plot.R");plot1(pd)
source("scene.R")
source("scene.R")
source("plot.R")
plot1(pd)
source("plot.R");plot1(pd)
source("plot.R");plot2(pd)
source("plot.R");plot2(pd)
source("plot.R");plot2(pd)
source("plot.R");plot2(pd)
source("plot.R");plot1(pd)
ed(pd)
pd <- prepareData(lineLFollow$rayData)
source("plot.R");plot1(pd)
pd <- prepareData(lineLFollow$rayData)
ed(pd)
ed(lineLFollow$rayData)
ed(pd[angIn > 42])
ed(pd[angInDeg > 42])
unique(pd$angInDeg)
ed(pd[angInDeg = 52])
ed(pd[angInDeg == 52])
source("plot.R");plot2(pd)
pd3 <- pd
source("scene.R")
windows()
source("plot.R");plot2(pd)
source("plot.R");plot1(pd)
source("experiments/experiment1.R")
source("experiments/experiment1.R")
pd
observer
source("experiments/experiment1.R")
pd
source("experiments/experiment1.R")
source("experiments/experiment1.R")
parameters$nInteractions
parameters$outRayLength
observer(ray(),drop)
observer(ray(),drop())
drop
source("experiments/experiment1.R")
source("experiments/experiment1.R")
source("experiments/experiment1.R")
source("experiments/experiment1.R")
source("experiments/experiment1.R")
source("experiments/experiment1.R")
source("experiments/experiment1.R")
source("experiments/experiment1.R")
source("experiments/experiment1.R")
lineL
str(lineL)
jsonedit(lineL)
library(listviewer)
jsonedit(lineL)
source("experiments/experiment1.R")
dVector
origin
n
rayOs
Q
source("experiments/experiment1.R")
source("experiments/experiment1.R")
